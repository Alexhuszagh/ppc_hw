{"name":"Ppc hw","tagline":"helloworld powerpc-app on qemu-e500","body":"# qemu_ppce500_helloworld\r\nhelloworld powerpc-app on qemu-e500\r\n\r\n\r\nThis is a minimal program that prints to the serial port.\r\nA real program will have to do a lot more configuration.\r\nDocumentation and source code from a more complete processor \r\nsetup can be found at Freescale, search for AN2551.\r\n\r\n##CREDITS\r\n* The program is based on a stripped version of the u-boot code,\r\n  and the three header files in the inc folder have been copied from\r\n  u-boot. A little hack was be done in processor.h (see AAA_HACK_DISABLE)\r\n  to avoid having to include even more files .\r\n\r\n* The file startup.S is essentially the same file as the file\r\n  EclipseDemos/Juno/POWERPC/Freescale_MPC5554Demo/crt0.S\r\n  From and archive at [macraigor](http://www.macraigor.com/gnu/hw_support_12.0.0_64-bit.exe)\r\n\r\n* The file test.ld is adapted from an \r\n  [article](http://opensourceforu.efytimes.com/2011/07/qemu-for-embedded-systems-development-part-2/) \r\n  on bare metal arm on qemu.\r\n\r\n##SYNOPSIS\r\n  At startup, tlb1, entry0 is mapped and code is executed from it.\r\n  However, it is only 4kB so in real use this code will have to \r\n  map more code into memory. Since entry0 is in use, entry1 is used\r\n  for the ccsrbar mapping. \r\n\r\n###FILES:\r\n* startup.S  -- sets the stackpointer and calls c_entry\r\n* test.c     -- implements c_entry which maps the ccsrbar to\r\n                be able to access the serial port.\r\n                Then it prints a message to the serial port.\r\n\r\n\r\n##INSTRUCTIONS\r\n\r\n  Edit the makefile to set correct paths to the toolchain and qemu. \r\n\r\n  (You need to have a toolchain to cross-compile to ppc\r\n  and an appropriate qemu-version. Instructions for these\r\n  are forthcoming).\r\n\r\n###Usage:\r\n*    `make`       -- compiles and links it.\r\n*    `make run`   -- let qemu run the compiled binary  (exit with `C-a x`)\r\n*    `make debug` -- start qemu, waiting for a gdb-connection.\r\n*    `make dis_test`   -- dumps the assembler to stdout\r\n\r\n*    attaching with gdb (inside emacs) --\r\n \t  `/home/ara/gnutools-bin/powerpc-eabi/bin/powerpc-eabi-gdb -i=mi test.elf`\r\n \t  in gdb: `target remote localhost:1234`\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}